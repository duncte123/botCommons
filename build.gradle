/*
 *    Copyright 2018 Duncan "duncte123" Sterken
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'idea'
    id 'com.jfrog.bintray' version '1.8.4'
}

group = "me.duncte123"
archivesBaseName = "botCommons"
version = '1.0.' + getBuildNum()

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()

    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }
}

dependencies {
    // https://bintray.com/bintray/jcenter/com.fasterxml.jackson.core:jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-text
    api group: 'org.apache.commons', name: 'commons-text', version: '1.6'
    
    //https://github.com/google/guava/releases/latest
    api group: 'com.google.guava', name: 'guava', version: '27.0.1-jre'
    
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    api group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    
    // https://bintray.com/bintray/jcenter/com.squareup.okhttp3:okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.12.1'
    
    // https://bintray.com/natanbc/maven/reliqua/
    api(group: 'com.github.natanbc', name: 'reliqua', version: '2.4') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    
    compileOnly (group: 'net.dv8tion', name: 'JDA', version: '3.8.3_460') {
        exclude module: 'opus-java'
    }

    testImplementation (group: 'net.dv8tion', name: 'JDA', version: '3.8.1_454') {
        exclude module: 'opus-java'
    }

    testImplementation group: 'junit', name: 'junit', version: '4.12'

    testImplementation 'com.squareup.okhttp3:mockwebserver:3.12.1'
}

javadoc {
    failOnError = false
    options.memberLevel = JavadocMemberLevel.PUBLIC
    options.author()
    options.encoding = 'UTF-8'
    options.addStringOption('-html5')
}

task sourcesForRelease(type: Copy) {
    from('src/main/java') {
        include '**/CommonsInfo.java'
        filter(ReplaceTokens, tokens: [
                version: version
        ])
    }
    includeEmptyDirs = false
    into 'build/filteredSrc'
}

task generateJavaSources(type: SourceTask) {
    def javaSources = sourceSets.main.allJava.filter {
        it.name != 'CommonsInfo.java'
    }
    source = javaSources + sourcesForRelease.destinationDir

    dependsOn sourcesForRelease
}

compileJava {
    options.encoding = 'UTF-8'
    source = generateJavaSources.source

    dependsOn generateJavaSources
}

jar {
    classifier = "jar"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.output
    from sourceSets.main.allSource
    classifier = null
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        MavenProject(MavenPublication) {
            from components.java
            groupId group
            artifactId archivesBaseName
            version = version

            artifact javadocJar
            artifact sourcesJar
        }
    }
}
bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'maven'
        name = 'botcommons'
        licenses = ['Apache-2.0']
        publications = ['BintrayUpload']
        vcsUrl = 'https://github.com/duncte123/botcommons.git'
        publish = true
        version {
            name = project.version
            released = new Date()
        }
    }
}

publishing {
    publications {
        BintrayUpload(MavenPublication) {
            from components.java
            groupId group
            artifactId archivesBaseName
            version version
            artifact javadocJar
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url "$buildDir/repo"
        }
    }
}

build {
    dependsOn clean
    dependsOn jar
    dependsOn javadocJar
    dependsOn sourcesJar
    dependsOn publish

    jar.mustRunAfter clean
    javadocJar.mustRunAfter jar
    sourcesJar.mustRunAfter javadocJar
    publish.mustRunAfter sourcesJar
}

static def getBuildNum () {
    return System.getenv('CIRCLE_BUILD_NUM') ?: 'dev'
}
